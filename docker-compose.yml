version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: safetravels-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-safetravels_db}
      MYSQL_USER: ${MYSQL_USER:-safetravels}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/prisma/schema.prisma:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - safetravels-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: safetravels-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: mysql://${MYSQL_USER:-safetravels}:${MYSQL_PASSWORD:-password}@mysql:3306/${MYSQL_DATABASE:-safetravels_db}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      PORT: 5000
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-5242880}
      UPLOAD_PATH: ./uploads
    ports:
      - "5000:5000"
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      - mysql
    networks:
      - safetravels-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: safetravels-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - safetravels-network

volumes:
  mysql_data:
  backend_uploads:

networks:
  safetravels-network:
    driver: bridge





